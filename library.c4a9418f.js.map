{"mappings":"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","sources":["src/js/libRender.js"],"sourcesContent":["import { API_service } from './api/apiService';\nimport { getDatabase, ref, get } from 'firebase/database';\nimport { getAuth, onAuthStateChanged } from 'firebase/auth';\nimport { initializeApp } from 'firebase/app';\nimport { firebaseConfig } from './api/firebase/firebaseConfig';\nimport renderFilmsMarkup from './librender/renderFilmsMarkup';\nimport dataStorage from './api/firebase/data-storage';\nimport { onOpenModalAuth } from './api/firebase/auth-settings';\nimport * as spiner from './features/auth/spiner';\nimport { renderPagination } from './pagination';\nimport { Loading } from 'notiflix';\n\nconst app = initializeApp(firebaseConfig);\nconst db = getDatabase(app);\nconst auth = getAuth(app);\n\nconst userData = {\n  queue: {},\n  watched: {},\n};\nnew dataStorage(userData);\nconst filmsApi = new API_service();\n\nconst authBtn = document.querySelector('#auth');\nconst watchedBtnRef = document.querySelector('.js-watched');\nconst queueBtnRef = document.querySelector('.js-queue');\nconst filmsList = document.querySelector('.library__container-list');\nconst emptyMessage = document.querySelector('.library__mes');\n\nqueueBtnRef.addEventListener('click', onQueueBtnClick);\nwatchedBtnRef.addEventListener('click', onWatchedBtnClick);\nauthBtn.addEventListener('click', onOpenModalAuth);\n\nonWatchedBtnClick();\n\nexport function onWatchedBtnClick() {\n  if (watchedBtnRef.classList.contains('current')) return;\n  let spinerSelector = spiner.spinerInit('body');\n\n  onAuthStateChanged(auth, user => {\n    if (user) {\n      const libDataBase = `users/${user.uid}/lib/watched/`;\n\n      get(ref(db, libDataBase))\n        .then(snapshot => {\n          if (snapshot.exists()) {\n            const ids = Object.keys(snapshot.val());\n\n            //pagination\n            localStorage.setItem('fetchType', 'watched');\n            localStorage.setItem('totalPages', Math.ceil(ids.length / 20));\n            const totalPages = localStorage.getItem('totalPages');\n            renderPagination(totalPages);\n            //pagination\n\n            localStorage.setItem('watched', JSON.stringify(snapshot.val()));\n\n            if (!emptyMessage.classList.contains('visually-hidden')) {\n              emptyMessage.classList.add('visually-hidden');\n            }\n            renderMarkupByIds(ids, localStorage.getItem('currentPage'));\n\n            //Render\n          } else {\n            if (emptyMessage.classList.contains('visually-hidden')) {\n              emptyMessage.classList.remove('visually-hidden');\n            }\n            filmsList.innerHTML = '';\n            console.log('No data available');\n            renderPagination(1);\n          }\n        })\n        .catch(error => {\n          console.error(error);\n        });\n    }\n  });\n  spiner.removeSpiner(spinerSelector);\n  watchedBtnRef.classList.add('is-active');\n  queueBtnRef.classList.remove('is-active');\n}\n\nexport function onQueueBtnClick() {\n  if (queueBtnRef.classList.contains('is-active')) return;\n  queueBtnRef.classList.add('is-active');\n  watchedBtnRef.classList.remove('is-active');\n\n  let spinerSelector = spiner.spinerInit('body');\n\n  onAuthStateChanged(auth, user => {\n    if (user) {\n      const libDataBase = `users/${user.uid}/lib/queue/`;\n\n      get(ref(db, libDataBase))\n        .then(snapshot => {\n          if (snapshot.exists()) {\n            const ids = Object.keys(snapshot.val());\n\n            //pagination\n            localStorage.setItem('fetchType', 'queue');\n            localStorage.setItem('totalPages', Math.ceil(ids.length / 20));\n            const totalPages = localStorage.getItem('totalPages');\n            renderPagination(totalPages);\n            //pagination\n\n            localStorage.setItem('queued', JSON.stringify(snapshot.val()));\n\n            if (!emptyMessage.classList.contains('visually-hidden')) {\n              emptyMessage.classList.add('visually-hidden');\n            }\n            renderMarkupByIds(ids);\n\n            //render\n          } else {\n            if (emptyMessage.classList.contains('visually-hidden')) {\n              emptyMessage.classList.remove('visually-hidden');\n            }\n            filmsList.innerHTML = '';\n\n            console.log('No data available');\n            renderPagination(1);\n          }\n        })\n        .catch(error => {\n          console.error(error);\n        });\n    }\n  });\n  spiner.removeSpiner(spinerSelector);\n}\n\nexport default async function renderMarkupByIds(ids, page = 1) {\n  try {\n    let spinerSelector = spiner.spinerInit('body');\n\n    console.log('spinner on');\n\n    // Loading.pulse({\n    //   svgColor: 'orange',\n    // });\n\n    const startIndex = (page - 1) * 20;\n    const endIndex = page * 20;\n    const idsToRender = ids.slice(startIndex, endIndex);\n    const arrProm = idsToRender.map(async id => {\n      filmsApi.id = id;\n      return await filmsApi.fetchMovieById();\n    });\n    const films = await Promise.all(arrProm);\n    renderFilmsMarkup(films);\n    console.log('spinner off');\n    spiner.removeSpiner(spinerSelector);\n  } catch (error) {\n    console.log(error);\n  }\n}\n"],"names":["$bpxeT","parcelRequire","$fcd177fd60824f37$var$app","$fkNhc","initializeApp","$1HnB8","firebaseConfig","$fcd177fd60824f37$var$db","$cokon","getDatabase","$fcd177fd60824f37$var$auth","$gQOBw","getAuth","$6QfM3","default","queue","watched","$fcd177fd60824f37$var$filmsApi","$1ubxI","API_service","$fcd177fd60824f37$var$authBtn","document","querySelector","$fcd177fd60824f37$var$watchedBtnRef","$fcd177fd60824f37$var$queueBtnRef","$fcd177fd60824f37$var$filmsList","$fcd177fd60824f37$var$emptyMessage","$fcd177fd60824f37$export$852eb21c65e590aa","classList","contains","spinerSelector","$37FUf","spinerInit","onAuthStateChanged","user","libDataBase","concat","uid","get","ref","then","snapshot","exists","ids","Object","keys","val","localStorage","setItem","Math","ceil","length","totalPages","getItem","$jcFG7","renderPagination","JSON","stringify","add","$fcd177fd60824f37$export$2e2bcd8739ae039","remove","innerHTML","console","log","catch","error","removeSpiner","$fcd177fd60824f37$var$_renderMarkupByIds","apply","this","arguments","$parcel$interopDefault","$2TvXO","mark","_callee1","page","startIndex","endIndex","idsToRender","arrProm","films","_args","slice","map","_callee","id","fetchMovieById","Promise","all","_ctx1","sent","$6fKxr","t0","addEventListener","$8UO9k","onOpenModalAuth"],"version":3,"file":"library.c4a9418f.js.map"}